// Generated by view binder compiler. Do not edit!
package com.appsnipp.education.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.appsnipp.education.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ViewFlipper flipper;

  @NonNull
  public final ImageView iconQuit;

  @NonNull
  public final ImageView imageQuit;

  @NonNull
  public final LayoutLoginBinding login;

  @NonNull
  public final LayoutRegisterBinding register;

  private ActivityLoginBinding(@NonNull RelativeLayout rootView, @NonNull ViewFlipper flipper,
      @NonNull ImageView iconQuit, @NonNull ImageView imageQuit, @NonNull LayoutLoginBinding login,
      @NonNull LayoutRegisterBinding register) {
    this.rootView = rootView;
    this.flipper = flipper;
    this.iconQuit = iconQuit;
    this.imageQuit = imageQuit;
    this.login = login;
    this.register = register;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.flipper;
      ViewFlipper flipper = ViewBindings.findChildViewById(rootView, id);
      if (flipper == null) {
        break missingId;
      }

      id = R.id.iconQuit;
      ImageView iconQuit = ViewBindings.findChildViewById(rootView, id);
      if (iconQuit == null) {
        break missingId;
      }

      id = R.id.imageQuit;
      ImageView imageQuit = ViewBindings.findChildViewById(rootView, id);
      if (imageQuit == null) {
        break missingId;
      }

      id = R.id.login;
      View login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }
      LayoutLoginBinding binding_login = LayoutLoginBinding.bind(login);

      id = R.id.register;
      View register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }
      LayoutRegisterBinding binding_register = LayoutRegisterBinding.bind(register);

      return new ActivityLoginBinding((RelativeLayout) rootView, flipper, iconQuit, imageQuit,
          binding_login, binding_register);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
