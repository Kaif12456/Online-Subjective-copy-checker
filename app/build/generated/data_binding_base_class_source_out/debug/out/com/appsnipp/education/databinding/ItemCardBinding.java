// Generated by view binder compiler. Do not edit!
package com.appsnipp.education.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.appsnipp.education.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView FileSubjectAdmin;

  @NonNull
  public final Button btnView;

  @NonNull
  public final CardView cardItem;

  @NonNull
  public final ImageView cardViewImage;

  @NonNull
  public final TextView fileNameAdmin;

  private ItemCardBinding(@NonNull CardView rootView, @NonNull TextView FileSubjectAdmin,
      @NonNull Button btnView, @NonNull CardView cardItem, @NonNull ImageView cardViewImage,
      @NonNull TextView fileNameAdmin) {
    this.rootView = rootView;
    this.FileSubjectAdmin = FileSubjectAdmin;
    this.btnView = btnView;
    this.cardItem = cardItem;
    this.cardViewImage = cardViewImage;
    this.fileNameAdmin = fileNameAdmin;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FileSubjectAdmin;
      TextView FileSubjectAdmin = ViewBindings.findChildViewById(rootView, id);
      if (FileSubjectAdmin == null) {
        break missingId;
      }

      id = R.id.btnView;
      Button btnView = ViewBindings.findChildViewById(rootView, id);
      if (btnView == null) {
        break missingId;
      }

      CardView cardItem = (CardView) rootView;

      id = R.id.card_view_image;
      ImageView cardViewImage = ViewBindings.findChildViewById(rootView, id);
      if (cardViewImage == null) {
        break missingId;
      }

      id = R.id.fileNameAdmin;
      TextView fileNameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (fileNameAdmin == null) {
        break missingId;
      }

      return new ItemCardBinding((CardView) rootView, FileSubjectAdmin, btnView, cardItem,
          cardViewImage, fileNameAdmin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
